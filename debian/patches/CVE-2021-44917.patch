Description: Fix divide by zero vulnerability
Origin: https://sourceforge.net/p/gnuplot/gnuplot-main/ci/7285b0c578a067d8d9fe0566ccefaee131f62087/
        https://sourceforge.net/p/gnuplot/gnuplot-main/ci/bac7cf51333242999ecb66883fd6076168ec3441/
Author: Ethan A Merritt
Reviewed-By: Anton Gladky <gladk@debian.org>
Bug-Debian: https://bugs.debian.org/1002539
Last-Update: 2021-12-25

--- gnuplot-5.4.2+dfsg2.orig/src/set.c
+++ gnuplot-5.4.2+dfsg2/src/set.c
@@ -5065,18 +5065,6 @@ set_terminal()
 	fprintf(stderr,"Options are '%s'\n",term_options);
     if ((term->flags & TERM_MONOCHROME))
 	init_monochrome();
-
-    /* Sanity check:
-     * The most common failure mode found by fuzzing is a divide-by-zero
-     * caused by initializing the basic unit of the current terminal character
-     * size to zero.  I keep patching the individual terminals, but a generic
-     * sanity check may at least prevent a crash due to mistyping.
-     */
-    if (term->h_char <= 0 || term->v_char <= 0) {
-	int_warn(NO_CARET, "invalid terminal font size");
-	term->h_char = 10;
-	term->v_char = 10;
-    }
 }
 
 
--- gnuplot-5.4.2+dfsg2.orig/src/term.c
+++ gnuplot-5.4.2+dfsg2/src/term.c
@@ -235,6 +235,7 @@ static void UNKNOWN_null(void);
 static void MOVE_null(unsigned int, unsigned int);
 static void LINETYPE_null(int);
 static void PUTTEXT_null(unsigned int, unsigned int, const char *);
+static TBOOLEAN sanity_check_font_size(void);
 
 static int strlen_tex(const char *);
 
@@ -516,6 +517,8 @@ term_start_plot()
 	term_suspended = FALSE;
     }
 
+	sanity_check_font_size();
+
     if (multiplot)
 	multiplot_count++;
 
@@ -2930,3 +2933,21 @@ escape_reserved_chars(const char *str, c
 
     return escaped_str;
 }
+
+/* Sanity check:
+ * The most common program failure mode found by fuzzing is a divide-by-zero
+ * caused by initializing the basic unit of the current terminal character
+ * size to zero.  I keep patching individual terminals, but a generic
+ * sanity check may at least prevent a crash due to typos.
+ */
+static TBOOLEAN
+sanity_check_font_size()
+{
+    if (!(0 < term->v_char && term->v_char < term->ymax)
+    ||  !(0 < term->h_char && term->h_char < term->xmax)) {
+	int_warn(NO_CARET, "Invalid terminal font size");
+	term->v_char = term->h_char = 10;
+	return FALSE;
+    }
+    return TRUE;
+}
\ No newline at end of file
--- gnuplot-5.4.2+dfsg2.orig/term/emf.trm
+++ gnuplot-5.4.2+dfsg2/term/emf.trm
@@ -805,7 +805,7 @@ EMF_options()
 	new_defaultfontsize = real_expression();
     }
 
-    if (new_defaultfontsize > 0)
+    if ((0 < new_defaultfontsize) && (new_defaultfontsize < 999))
 	emf_defaultfontsize = new_defaultfontsize;
 
     sprintf(term_options, "%s %s font \"%s,%g\"",
